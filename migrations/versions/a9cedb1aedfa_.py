"""empty message

Revision ID: a9cedb1aedfa
Revises: 
Create Date: 2021-07-28 22:22:32.373501

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a9cedb1aedfa'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('company',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=1000), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('member',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=1000), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('social_accounting',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_owner_social_accounting', sa.Integer(), nullable=True),
    sa.Column('account_owner_company', sa.Integer(), nullable=True),
    sa.Column('account_owner_member', sa.Integer(), nullable=True),
    sa.Column('account_type', sa.Enum('p', 'r', 'a', 'prd', 'member', 'accounting', name='accounttypes'), nullable=False),
    sa.Column('balance', sa.Numeric(), nullable=True),
    sa.ForeignKeyConstraint(['account_owner_company'], ['company.id'], ),
    sa.ForeignKeyConstraint(['account_owner_member'], ['member.id'], ),
    sa.ForeignKeyConstraint(['account_owner_social_accounting'], ['social_accounting.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('jobs',
    sa.Column('member_id', sa.Integer(), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['member_id'], ['member.id'], )
    )
    op.create_table('plan',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('plan_creation_date', sa.DateTime(), nullable=False),
    sa.Column('planner', sa.Integer(), nullable=False),
    sa.Column('costs_p', sa.Numeric(), nullable=False),
    sa.Column('costs_r', sa.Numeric(), nullable=False),
    sa.Column('costs_a', sa.Numeric(), nullable=False),
    sa.Column('prd_name', sa.String(length=100), nullable=False),
    sa.Column('prd_unit', sa.String(length=100), nullable=False),
    sa.Column('prd_amount', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=5000), nullable=False),
    sa.Column('timeframe', sa.Numeric(), nullable=False),
    sa.Column('social_accounting', sa.Integer(), nullable=False),
    sa.Column('approved', sa.Boolean(), nullable=False),
    sa.Column('approval_date', sa.DateTime(), nullable=True),
    sa.Column('approval_reason', sa.String(length=1000), nullable=True),
    sa.Column('expired', sa.Boolean(), nullable=False),
    sa.Column('renewed', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['planner'], ['company.id'], ),
    sa.ForeignKeyConstraint(['social_accounting'], ['social_accounting.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('offer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('cr_date', sa.DateTime(), nullable=False),
    sa.Column('name', sa.String(length=1000), nullable=False),
    sa.Column('description', sa.String(length=5000), nullable=False),
    sa.Column('amount_available', sa.Numeric(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['plan_id'], ['plan.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('account_from', sa.Integer(), nullable=False),
    sa.Column('account_to', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Numeric(), nullable=False),
    sa.Column('purpose', sa.String(length=1000), nullable=True),
    sa.ForeignKeyConstraint(['account_from'], ['account.id'], ),
    sa.ForeignKeyConstraint(['account_to'], ['account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('kaeufe',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('kauf_date', sa.DateTime(), nullable=False),
    sa.Column('angebot', sa.Integer(), nullable=False),
    sa.Column('type_member', sa.Boolean(), nullable=False),
    sa.Column('company', sa.Integer(), nullable=True),
    sa.Column('member', sa.Integer(), nullable=True),
    sa.Column('kaufpreis', sa.Numeric(), nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('purpose', sa.Enum('means_of_prod', 'raw_materials', 'consumption', name='purposesofpurchases'), nullable=False),
    sa.ForeignKeyConstraint(['angebot'], ['offer.id'], ),
    sa.ForeignKeyConstraint(['company'], ['company.id'], ),
    sa.ForeignKeyConstraint(['member'], ['member.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('kaeufe')
    op.drop_table('transaction')
    op.drop_table('offer')
    op.drop_table('plan')
    op.drop_table('jobs')
    op.drop_table('account')
    op.drop_table('social_accounting')
    op.drop_table('member')
    op.drop_table('company')
    # ### end Alembic commands ###
